<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAGZdJREFUeF7t
        nQe0bkV5hm+awWAoKr2IVOlV6U06KCAEKYI0YSmgghELghIRRRQFxEhTumDoxAASUIQAShekKRaKSDOh
        GUIK5H1m+OXec8495y+7zMx+n7XelflO1Hvv+f89e+ar04wxxhhjjDHGGGOMMcYYY0yDvE76y7g0xnSJ
        P5N+Jt0h/RU/MMZ0hz2kV6T/ky6X2BCMMR3gb6X/lNgA9pT+XTpJMsZ0gAskjv9sAitIS0n/JX1aMsYU
        zFoSx/7lpJelN0uwnsTPdw6WMaY48Pg/LH1Nml/6H2lWqceu0v9K6wTLGFMUn5OelAj/cQJ4UfpzaXoO
        k7gOLBksY0wRLCjxxt8oWNOmbS09GpfjOEX6D2muYBljsudG6Yq4DBwk3R6X4yAkeKX0a2kWfmCMyZdt
        JY71bwpW5ATp0ricEJKD7pZ+Iv0FPzDG5MfrpWekjwbrNTgNHBOXM4V8gSckwoZOFDImQ06VHpTGPsD3
        SfvE5aTgO3hOInJgjMmIFSVi+yT7jOVxaZO4nBL+d/5bOjBYxpjkIbz3gPTtYI3nJWmJuOyLzSU2E/wJ
        xpjE4c7P3f9vgjUj3O0JCfayAPtlX4n/3qrBMsYkCd5+3vDbB2s880lk/JEQNChfkv4oLRIsY0xy/EC6
        Pi4nZBXp+bgcinMkMgrnDJYxJhk2ljimLxCsiXmPRE3AsOBf+LGEj+Gv+YExpn040hO3J+d/Mg6Wbo3L
        oSFD8H7pWsk5AsYkwFek30lT9fk7WTo/LkeCK8BT0hnBMsa0xmISjj3q/afiR9JRcTkyOAOpKjwiWMaY
        xuEITnPPft/qZAHSCqwq3iGx+fSTWWiMqRgafBKamz1YU/MHaf24rIztJBKFNguWMaYReg0+9wrW1FDl
        R2XgIFmA/UKJMSnDNBsxxjTAeRINPvv1xM8mcVyfvjS4So6TKB6aJ1jGmNpYQ+LYvWiw+mNhiQ2grolA
        bEQXS0QjOJ0YY2qAJh0PSccGq3/WlKgRGNsLsEr4u90i3Sl56pAxNXCo9LQ0aCbeDtIjcVkrFCH9RmLq
        UJ2bjTGdg5beONso0R0Uuv7SH7AJ5pZoLuqpQ8ZUyHUSBT/DcJZEMU9T0F6cqMOngmWMGQkKeSj1HbSW
        vwdFPJ+Py8Zg0IinDhkzItz3ceARbx8W+gPuFpeNwp9J9GHdYBljBuZb0i+lYZ1q/PeelYgEtMFnJOoG
        PHXImAFZRuIYvXKwhoMTBPdxCofagi7FjCMf9gpjTOfgzU0Bz+nBGh6yAF+R2kzQIVEIB6anDhnTJwdI
        HN0navA5CItLHMGH6QVYJWQhkr7sqUPGTAE5+xzbSeAZFbzxxOVTSMzhNPKY5KlDxkzCv0g3SVU8JHji
        iQKkAlOHaE7qqUPGTMA7JUJnCwVrdOjaQw+/lOhNHRo7u9CYTsM9mQafhwerGigdPi0uk4ImIp46ZMx0
        fFl6VKrSSUYNwCFxmRwfkGhnvlqwjOkw1PfXkTVHFWAVzsS6+KL0gvSWYBnTQXD2UUt/SbCqg5MEocTV
        g5Um/NvPlbj69Nvf0Jii2FWix98cwaoOGnNwxK7KoVgXhCipdvTUIdM5yNCjuy/34aohn4BrRQ5tunjw
        yXwkYpFCzoIxjUCd/l1SHYkxS0kpZAH2CycgBpB66pDpBMzc5w3Ng1oHG0rMA8iJt0qeOmSKh2Mu/fOO
        D1Y97CvdG5dZgdOSjbGOa5ExSUBsnhLZOp1eR0vXxGV20AXJU4dMkcwnkQq7RbDq4yKJhiK5cqBEFGP5
        YBlTCEzqvToua4Ue/R+Ly2xhBgK5DGyaxmTPuyXe/vMGq16Y1MNROmeIjlwqkdE4Kz8wJlfohkNt/sHB
        qh/yC4g05A5FUjdLnjpksob7+K+kJhJdeFBelkoZ2NmbOnSlVEfOhDG1srREaGuUBp+DQANO/rw3BKsM
        mDpE5MRTh0xW8Ma6RzozWM2whERbsdLeliRNeeqQyYoPSpS8NunEIn7++7gsjg0kcgR2CpYxCfNGidTW
        pr+s+0l3x2WRvE9iE1g/WMYkymXST+OyUY6RGNNdMkwd4jpQVy2FMSPBURVHXBvdboidHxeXRXOKRGh1
        rmAZkwh046HLzZHBah6GcDBcpHRwcl4lMXXo9fzAmBTgwScTjySWNmAAx5Zx2RpNRSDIeaCngqcOmSRY
        ROLoz1SeNuDB425M7kFXoOsRm97FUmmhT5MRfPlIW8X51xaEG9mASJxpmyYfxgUkpg59PVjGtMDOEmE/
        wn9twYNPGnAKDTabfhuvJHnqkGkF3rzPSR8KVnusINFlOBWa3gTos8AGuHWwjGmIs6SfS23fQSk5fjwu
        k6CN30dv6tDbg2VMzVB2S2ba24LVLhx/U8sCbKPV95ckTkI4ZY2pDb7cxKFPCFb78PcgESgl2jgF8Gd+
        V6LV+Jz8wJg6oMEH7bdTmWpDzbw94RE2Z6YO3S/lMh/BZAQNN16SuHenAn6Ith2RKcHGzAbgqUOmcn4o
        8cVKiaekjeOyVdp2hk4Pg0f5vZwdLGMqYCupqQaf/UJaLI6vZYLVLiltAIAz0FOHTCXQ4JN7f2qdaWgB
        RvgrhSzAQWliw1hDIkvSU4fMSHxDokllasUn80t8we3wmjnbS4RsNw2WMQNCAwq+QKsFKy1IfCEbMYWN
        KeXKPKYOcX3z1CEzEBxTafBJ1l+KMAiEqrgUSM0HMBZCpWyWnjpk+mYfiYoz+tSnyCelNlqQ5QgbFOXD
        j0qUExszKXNIeNh3DVaanCqdH5emD7im3CLdIXnqkJkUpu3eKqV8tGXo6FFxafrEU4fMlKwn4V1PvbDk
        AWnvuDQDwCQlpg7RZNSYGaCvH0M2qC5LGdJc+RKzWZnBWVLy1CEzji9IbACp3xH5+5HpxhfZDEdv6tAu
        wTKdhz5zHP03DFba0JGITjjkvZvhwcnLZ75usEynuUn657hMnrdKHGFTKUvOmd7UIZ+mOsyOEqW+bTb4
        HITVpWcll7xWw8nSM5KnDnUQjtM8TPsHKw8YQEo4y1QDIcErJE8d6iCnS/dJOb1ND5NuiEtTEb2pQ1wF
        PXWoI6wo4QleNlj5cIZEDzxTLaQJEwW6MFimaHjjc4z+VrDy4nrp8Lg0FUOZNYVDxwbLFMvfSyTT0PAj
        N34rvS8uTQ0wcMVThwoGby9e/xwnynByYU7+2sEydbG5RI7ANsEyRcGceVpI5wjpyrQC8xCM+tlX4ned
        YkMYMyTs7HyouTaHoFQZx6WzAJuBupA/St5wC4DMuaelQ4KVJ4tKXF+cBdgc50i0GvfUocw5XnpIyjnO
        u46ED8A0B36XH0uUYHvjzZQlJI7OpNHmzO4SX0TTLDz4/N49dShDSPX8mXResPLmH6RcHZi5g/+Fq8CZ
        wTLZsJf0glRCQ8hzpe/EpWkBKjHpF0nvCJMBeMv5wN4frPy5WXInm3ZhJgORJDpHm8S5QKITbClNIMkC
        fG9cmhZhLgM+pc2CZZJkLYlsrsWCVQaULr8jLk3LHCRxEsitmKwTkDHHIIivBqsMKFllQ6NgxaRBb+qQ
        P5PEwFv+hFTS8Mw3SbxxZguWSQGulp46lBgLSrwpNwpWOZAFSJWah1qkBadNnLOEmj11KAFulC6Py6J4
        p/RkXJrEmH7qkBOFWoSZ8HR5zaXB5yCQz3B/XJoEmVuix8SJwTKNwy5Md9ePBKs8qExjJqBJF08dahEy
        5H4hlXoEo1ddji3MugaDRsgRcNemBuk1+Fw+WGVym/TxuDSJ05s65PmNDcAbnzd/6RNfH5bIQDN5cKjE
        dYBKVFMjZGRRI1/yUAdCf3Sm4aRj8oGpQ3w3PXWoJvD2ExvfNljlgoOTfydDTE0+sHEzdYgQoacO1QBx
        V/rklw5ZgEwEZiMweUGiEElCP5U8dahCNpVwtMwbrLJZRnpR8hcoT0gT/p1EJMeZnBVAjj+5/uT8dwHK
        Tvn3+suTL1zfnpe+FiwzEsdIj0hdeSN+SLo3Lk3GeOpQBSwuEfNfI1jdgLLTEusbughXV76/pTuua4Ej
        MA6V7wWrO3xfOiEuTQH0pg7RXswMwJ4SDT67VhNPWzMfG8viixK5HW8JlpkSPKn8wtgEusbj0pZxaQqB
        0+x3JZy7tBw3U3C+VFKDz34hjsypBweSKQvS2Bk2Qiq7pw5NwpoSjhMcgF2D5B/ui13Id+giPPj0eWD8
        mJuJTABvQGb64QnvIjz4JDz5DVEuXAHo9nRWsMwMUFXFL6erD8BKEgkkbISmXHpTh44IlgmQPcXxl9hp
        V8H5hxPQlA8zH/i+e+rQq9Dgk2qqLvMxiWYgpht46tCrbCfRUOHNweoutAG7NC5NRzhQImV4uWB1kFkk
        Ginwi+g6nIBcQNI9cHozCm6+YHWMk6QHJVe/TZt2j0TqqOkWfPc5+VH0Nis/6Ao09uQO5PZX8UvwlLRx
        sEzXoNq1U1OHSIQgKYIW3yaG/ggNeQJtdyER7NfSD6TiT8QM9WC4h1tfRegj94pU4qQj0z+9qUNcjYuF
        vncvSTsEy8DCEr8TN5Q0TB3iu/DpYBUIDS9uiEvzKqtIFAI5R9wAg0bwj+0SrIJg8i0ZUG57PSMMO2Ug
        iDE9GDnGJrB+sAoA72aXGnwOAkMmaSdtzPQcIpEkt1SwMudo6THJxS7j+bZ0QVwaMwNMHcJhju8sWxaV
        KHVdO1hmLNdItI4yZiyEBAkNEiLM0knMP+B2yW+4mUM25B5xacw4ODXfLXFNzO4EvbtEksvswTJjYYP8
        g7RhsIyZmDdITB26SMomUYgGnzz8ewfLTARpoFyPFguWMTOH6Nlz0nHByoBzpbuk4lMbR4CTEeGeOYNl
        zORkM3WIrid8sZcIlpkZ9IvnA3UvQNMvNBHh2domWAnCsZYGn8cGy0zG6hL14MYMAu3EuDry/UkOEhhw
        bPmtNjU7S7+KS2MG4kiJITo0Gk0GOpuQ7rtFsMxUHCbdFJfGDAS+tXMkumkn40Ni8MHVcWn64AzJfeLN
        sFBAdp2UxNShrSVKGalrNv3xb9Jn49KYoeDBb33q0OskGnzS3tr0zy8lKr+MGQXCyVwFuBK0Am2tcWa5
        pn0wKPRgJqIxo9KbOoRzsFGWkYhLMt7K9A8l0uQALBQsY0aHsCDhwcamDvHGp6X1mcEyg4DnloiJ6yRM
        lTBshxfyJsGqmQMk8pM71dO8IhaR2ACcKm2qhsa7fLdov18bHGFJRLDjbzjo/UbClDF1wNQhXs7zB6sm
        cDjwh8wVLDMIu0nOAjR1wcnyEokyYipza4E/hI4lD0idmGpSIfRHJHZrTF3QQOQWqdapQyQi/FZy15/B
        OE+iH6AxddKbOnSlVJu/iXsGMchPBMv0AzUAFE4ZUzeM32fq0CnBqomNJMIP/F8zNb+RdoxLY2qH3hy0
        Ga916hA97jkJOLllcjiKMQ1otWAZ0wwMGuElXdvUIb7YF0o0BHE/gJlDi2cKp+gIZEyTEH0iW3DdYNUA
        nsf7JKIDZmLmkF6W6PZqTNPUPnWISSbkB3whWGYs/OL5ADwpybQFY8ip4MVBWAu9xqDJNi9sERylT0uu
        njRt0cvhqXXq0Acl7rruDjwjzEqgi4sxbUJyEFOHfiLRzLcWSHZ5XPJ99zW+LF0Vl8a0CuX8FA6dFqwa
        4Jh7q8Rss9oykTLjYok7mDFtwHNII5rrJa7pN0qrSLVBzTt33hOCZcjP/nhcGtMYtO57v0TqPldzmtI2
        FopeVuKowV+g6zwm2TlqmuKNEiPoicxRgk42YG0VgpNBBhKbwIrB6iY4W/ggVg2WMfXxNonrJs8cnYO3
        lWpz9vULI8MoTOjqQMxZJD6QWhs1mM7CA85gHkqAyfi7Qqq1M9Cg4ICgDp7JwV1MhKF5Ch9MbbFX00ko
        +6U711MSdSZ0BEq2UQ9/WTqVdLGZ6HISrdTcQMVUwQISESUySx+R6AicRR0OfczxRO4frO7AeGd2aWNG
        gUzbayXCeDdLG0jZZZZuJfEPWCtY3YANj/uZMYPCqXEnifRdZkowCSip6cDDQG88jsTzBqt8jpMuj0tj
        +gKHOQ14udtTwPMZqZjMWpyC35eYk0eiQulcJjkhyvQDVaP018BpTOPd7aXWw3h1gNOCFtmXSqWnC1N8
        8eG4NGYc3OM3le6QuB7/q0TeTPFp9L3GohxvSoUP8Qlpy2AZ8xrkh+AfonDuRel4aR6pU9CmiF2PHbBE
        OL5xj1shWMZMmzafdKLEQ0+KOCX0bAad5UCJmCaz80qDD5ZWYLV1YTFZwEmQhrA/lKYP4xV/zO+XcyWS
        GkrLluOaQ/iGRCjTPXphvAclvgcMh1lUMmPgF/VziR2ypF2RnGz8HEV6cs1MoRz+c9Izr4o1jWHNJHBM
        flb6SrDK4F0SKdCmG/B25y3P254o13slN4IdgJUlYqA7BCt/KNa4LS5NoRDG21i6XeqF8fgemyHZU2IH
        XTpYefNNiVwHUx74q/aTfi9xzeOz7kp2a+0w1PBJabZg5Qu12V+NS1MIPOTfkHjoieEfILnUu2I4VtFH
        j8aiOTvQ6Mqyb1yazFlJ4njPFZWsvU2k7KrxcoIeZpTRnhysPCELkC+KyRMceOTjM9OBrk7nS5550SAU
        R+AP+ECw8oP+B0vGpcmIXhiPqBT6vJT7dTRb/k7i2JVbU81ZJd4azgLMB8J41Nzz0iF5hyQed3JKgKMl
        EioYQpoLZAGyAXQ6zzsDSDwjLZf0XMJ4P5JI23WabkLwYfDBUFqbS2IFseDn49IkCG92rpYkanFVw9dE
        vz2TKIRaqBf4p2Clz3bSQ3FpEmJuiS5NhPEINX9UchgvExhrRBllDmO2DpaYkWjahxMkJdlXShzz75Qo
        QfcxP0PossuHuH6w0oUj5ffi0rQE10VOYuRj4Ei+SGJ6jskcZp3RWBRHW6rgs2A+m2keGmh+SmIiFX4Y
        Pgfm5ZmCYAYa7ZJTHYrAW2fvuDQNQcvssyWcekzE3VXqQuPZToIXl86p5NuneJdjKut6cWlqhHRcWsv1
        wniMoWOIhukAFGYweZdMrZRgc+IttFiwTB1w8iOMR2SIlnIUkDmM10HWltj53x2sNCBtFKdTTolLucAA
        TCosabZKGI+eC2Rdmg5De2XeuKmMTVpIYlNyN5jqWFZioAwbK+3jaLXuVmvmTzB5mKyuFBpwMvuQ1GWX
        i44GDzgnu3sl0qovkZaRjBkHXxaGcF4vtf3g7Sg9HJdmCAjjfVLCkUoY7yjJYTwzJQxVJPZ7bLDag2lH
        N8WlGYCFpe9IvTDe7pLDeGYgmKvGPXGXYLXDWRJlpWZqCOHiyL1Bwm9yo7Sm5DRdMzQkgLAJLBes5uEa
        klpoMjV4s+8hcVWi/v50iROAMZXAsEVmq7fRyYXR52xCZjw0SCGMRyr30xKFXa7GM5XDEZI3Mf3amwwX
        8efSRopjrHkNwniXSZzM7pHw7jtKYmoFbzKtm08LVjOQoUZmmrMA48a7lUTcngefOD4bgTGNQVNO7piM
        YW4CrhxMBO5yE0mO9AdJdHWm8cYxknsjmtbYRsLDvHqw6oU3PyeALjaTXFDqhfHI0d9LSrVa03SMIySS
        Sup+E1EBSC5CV+63+DzWkK6TemG8dSSH8UxS8IWkdPg+qc63824Sk2FLhzAe/1YSdnjjk4pNyzZjkoXj
        KHHnC4JVD5w0ro3LIiHb8kiJMmxSdenOxBQnY7KAeyqNRT8RrOqhDyBJLaWBM5WeenjzacTyHsnVjiZL
        NpS4r9Yxt48agEPiMnsI420hMY+BB/9yaXnJmOwhAw1vfdXpp3i/GWeWMzTYIIxHww0y9r4u0YjDmKJg
        yAjDO6oa38UbkyzAJsKNdUBLrZMkrkiPSvtIDuOZYuEOS/deBkZUEbbCM07jityKWmiiSRtzrkUMM2Hm
        gtN0TScgL4D8ADzbo0IPQB4iUpBTh1DozhKt1cmUpHw5lZZqxjTK2yWcXEyRGQWmzpD6mnITi14Yj02P
        hCWal+SwYRlTK/tKvAmXCtZwEF0gNp4iS0jkP3BFIYy3veQwnjHTcaqE53vYxqJsIpS6pgJ+DUKdlERz
        NblKWklymq4xE4AX/zaJ9lTDPCRHS1fHZavgud9PekIi1HmCxBAVY8wUkNbK3fgfgzUYF0pMBW4LHnL+
        3jz0j0mUQFcV4jSmM9C0grsyPesG4Q6JBJom4aSyqnSNxDH/FglfhI/5xowAITIiAysHa2p44Hjr0nug
        CQjj7SQ9KLFZUYPgLkTGVAgpsDQW7WcoBYkzhNZ4G9fJ7NJnJSYPkXV4+Ks/M8ZUDG91xk0zcWiqxqI4
        3l6R5glW9Swu8ZYnVMlbfwfJYTxjaob+dswcPDtYM4cHn6N4lUk1nCo2kohMcL8nwrCKZIxpEFJk6Xrz
        kWBNDFmAeN+ryKFn0yGMh0+BzMJvSg7jGdMi75J4C68brPFsJtGCfBQ4RTDQhBJc/rc+LHlohjGJ8Dnp
        BWmit/EB0l1xOTDMMyRLjw3mTonsPVfjGZMYOAUZbkEF3diCHyIGNB3tFxx45OP/QsJ3cL5Evr4xJmF4
        8Jn9x5ir6cE+Li4nZWwYjyGic0jGmEzgCsBV4NBgReibt39cTgiORGruedsTxiPRqIvDQ4wpAgaAcGen
        aSbgsd8yLv8EV4YNpJsl/rPkFKwmOU3XmAI4UCL0x9udPnpLS0BSEP30yB/g/0+fvfklY0xhkCDEnHve
        8LTMxg/AZkApLmE8N9U0pmDw5pMqTBowmwDrzSWH8YzpCPTZO1EapZ2YMcYYY4wxxhhjjDHGGGOMMbUx
        bdr/A/UfarMocJluAAAAAElFTkSuQmCC
</value>
  </data>
</root>